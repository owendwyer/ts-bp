const audFrames: number[][] = [];

interface audSpriteType {
  [name: string]: [number, number];
  // [name:string]:number[]
}

export function getAudioSprite(ind: number): audSpriteType {
  let frams = audFrames[ind];
  let mySprite: audSpriteType = {};
  let cumDur = 0;
  for (let i = 0; i < frams.length; i++) {
    let sTim = cumDur;
    let myLen = frams[i] * 1000;
    let myId = "s_" + i;
    mySprite[myId] = [sTim, myLen];
    cumDur += myLen;
  }
  return mySprite;
}

audFrames[0] = [1, 1, 1, 1, 1, 1, 1, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1];
audFrames[1] = [1, 1, 1, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
audFrames[2] = [1, 1.5, 1, 1, 1.5, 1, 1, 1.5, 1.5, 1.5, 1, 1, 1.5, 1, 1.5, 1, 1, 1, 1, 1.5, 1, 1.5];
audFrames[3] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1];
audFrames[4] = [2, 1, 1.5, 1, 1, 1, 2, 1.5, 1.5, 1, 1, 1, 1, 1.5, 1.5, 1, 1, 1, 1, 1.5, 1, 1, 1.5, 1.5, 1, 1, 1.5];
audFrames[5] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1.5, 1.5, 1.5, 1, 1.5, 1, 1, 1];
audFrames[6] = [1, 1, 1, 1, 1, 1.5, 1.5, 1, 1.5, 1, 1, 1.5, 1.5, 1.5, 1.5, 1.5, 1, 1.5, 1, 1, 1, 1.5, 1.5, 1, 2, 1.5, 1.5, 1.5];
audFrames[7] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
audFrames[8] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1.5, 1, 1.5, 1.5, 1.5, 1, 1, 1, 1, 1, 2, 1.5];
audFrames[9] = [1, 1.5, 1, 1, 1.5, 1.5, 1, 1, 1.5, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1];
audFrames[10] = [1, 1.5, 1, 1.5, 1, 1, 1, 1.5, 1.5, 1, 1.5, 1, 1, 1, 1, 1.5, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1.5, 1, 1, 1, 1];
audFrames[11] = [1.5, 1.5, 1.5, 1.5, 1, 1, 1.5, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1.5, 1.5, 1, 1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5, 1];
audFrames[12] = [1.5, 1.5, 2, 1, 1, 1.5, 1, 1, 2, 2, 1.5, 1, 1, 1.5, 1, 1, 1, 1.5, 1, 1.5, 1.5, 1, 1, 1, 1.5, 1, 1.5, 1, 1.5, 2, 1, 1, 1, 1, 2];
audFrames[13] = [1, 1, 1.5, 1, 1, 1.5, 1.5, 1.5, 1, 1, 1, 1.5, 1, 1.5, 2, 1, 1, 1, 1.5, 1, 1.5, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1];
audFrames[14] = [1, 1, 1.5, 1, 1, 1, 1, 1, 1.5, 1.5, 1, 1, 1.5, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1.5, 1.5, 1, 1.5, 1, 1];
audFrames[15] = [1.5, 1, 1, 1.5, 1.5, 1.5, 1, 1.5, 1.5, 2, 1, 1, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1, 1.5, 1, 1, 2, 1.5, 1.5, 1, 1];
audFrames[16] = [1.5, 1, 1.5, 1, 1.5, 1, 1, 1.5, 1.5, 1, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1, 1, 1.5, 1.5, 1, 1];
audFrames[17] = [1.5, 1.5, 1.5, 1.5, 1, 1, 1, 1.5, 1, 1, 1.5, 1.5, 1, 1, 1, 1.5, 1, 1, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1.5, 1.5, 1.5];
audFrames[18] = [1, 1, 1, 1, 1, 1, 1.5, 1, 1.5, 1, 1.5, 1, 2, 1, 1, 1, 1.5, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1];
audFrames[19] = [1, 1, 1, 1.5, 1, 1, 1.5, 1, 1.5, 1, 1, 1, 1.5, 1.5, 1, 1, 1.5, 1, 2, 1, 1, 1.5, 1.5, 1.5, 1.5, 1, 1, 1, 1, 1, 1];
audFrames[20] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
audFrames[21] = [1, 1.5, 1.5, 1, 1.5, 1, 1, 1, 1, 1, 1, 1.5, 1];
audFrames[22] = [1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1];
audFrames[23] = [1, 1, 1, 1.5, 1, 1, 1, 1.5, 1.5, 1, 1, 1, 1.5, 1, 1, 1, 1, 1.5, 1.5, 1, 1, 1, 1.5, 1, 1, 1, 1, 1];
audFrames[24] = [1.5, 1, 1.5, 1.5, 1, 1, 1, 1, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1, 1.5, 1, 1, 1.5, 1, 1, 1.5, 1, 1, 1, 1, 1.5, 1.5, 1];
audFrames[25] = [1, 1, 1, 1, 1, 1, 1.5, 1, 1.5, 1, 1, 1, 1.5, 1.5, 1, 1, 1, 1.5, 1, 1.5, 1, 1, 1.5];
audFrames[26] = [1, 1, 1.5, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1.5, 1, 1.5, 1, 1, 1, 1.5, 1, 1.5];
audFrames[27] = [1, 1, 1.5, 1.5, 1, 1, 1, 1.5, 1, 1.5, 1.5, 1, 1, 1.5, 1, 1, 1, 1, 1, 1.5, 1.5, 1.5, 1, 1];
audFrames[28] = [1.5, 1.5, 1, 1.5, 1, 1, 1.5, 1, 1.5, 1, 1, 1, 1];
audFrames[29] = [1, 1, 1, 1.5, 1, 1.5, 1, 1.5, 1, 1.5, 1.5, 1, 1.5, 1.5, 1.5, 1, 1, 1.5, 1, 1.5, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
audFrames[30] = [1, 1, 1, 1, 1, 1.5, 1, 1.5, 1.5, 1.5, 1, 1, 1, 1, 1, 1.5, 1, 1.5, 1.5, 1];
